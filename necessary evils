Overview/Uses:
	We wish to design a database to store passenger railway information. The information will concern train cars/engines, passengers, schedules, and routes. Different views of the information will allow different types of users (passenger, system administrators etc.) to access and manipulate different components of the database. The database will be accessed through a web interface. 
	A database of this type will be advantageous and important in the regular running of passenger trains for a multitude of reasons, including: 
•	Eliminate human error in tasks such as scheduling (ex: scheduling a train without assigning an engine car).
•	Allow passengers easier access to up to date train scheduling information, expectantly resulting in higher customer satisfaction.  
•	Tracking passengers on specific train cars efficiently.	
•	Track passengers’ luggage on specific baggage cars, helping to avoid lost belongings.
•	Aid employees in mapping their work schedules. 

Specifications/Assumptions:
	The railway system may be imagined as a graph, in which the stations are vertices and the tracks are edges. A train route describes a path in this graph.  A specific rout is made up of sections of rail; the sections all include a segment of rail with a station at either end.  A train route as a whole also has a start station and an end station. 
	A train is considered to be one engine pulling a series of train cars. It is assumed that all trains will have exactly one engine pulling it. This is important in the design of the DBMS as the engine along with date and time are a train’s unique identifier in the grand scheme of all train voyages.  
	Trains may embark on voyages, which are train routes being travelled at a specific date and time. Each train is manned by a crew, including the conductor, engineer, stewards, etc. A specific crew will be assigned to each train voyage; it is assumed they will stay with the train for the entire traversal of the train rout.  
	There are passenger, dinning and baggage train cars. There are an appropriate number of baggage cars to house all the passengers’ belongings, as well as an appropriate number of dinning cars to feed all passengers. Appropriate numbers of dinning and baggage cars will be calculated based off the assumption that all passengers will have luggage and be dinning onboard the train at meal times.  
	A passenger may own many tickets for different voyages. Each ticket a passenger has represents a position they will (can) occupy in a specified passenger car, embarking on a specific train voyage. Ticket pricing is calculated by adding a base rate multiplied by the cost of selected traveling class to the distance traveled multiplied by the cost per unit of distance traveled . 
	
Goals:
	The passenger train databased should be valuable to all those who interact with it. It will cover all of the above uses, as well as creating a convenient, simple, and useful tool to access, store, and manipulate passenger train data. Based off the specifications we hope our DBMS will accurately model a passenger railway system. We will create many relations in the hopes of making the database easily extendible with the creation of new relations. Creating many relations will also hopefully eliminate repetition making our database able to perform fast lookups, and require minimal memory usage     
