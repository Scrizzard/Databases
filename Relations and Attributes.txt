
Ticket
	-primary key ID
	-(foreign key) passenger ID
	-(foreign key) train voyage ID
	-(foreign key) passenger car ID
	-price (computed from passenger car multiplier and route base cost)

Car/Voyage Pair
	-(foreign key) voyage ID
	-(foreign key) car ID
	
Engine/Voyage Pair
	-(foreign key) voyage ID
	-(foreign key) engine ID

Employee/Voyage Pair
	-(foreign key) voyage ID
	-(foreign key) voyage ID
	
Car
	-primary key ID
	-in service state
	
Passenger Car
	-number of seats (eg, number of available tickets)
	-class (numerical multiplier for cost)

Baggage Car
	-number of people whose baggage it can store
	
Dining Car
	-number of people it can satiate over a given voyage
	
Engine
	-(primary key) engine ID
	-year of construction
	-(foreign key) engine model name
	-in service state
	
Engine Type
	-(primary key) name
	-fuel type
	-year of invention
	-inventor (optional)
	-country of origin (optional)
	-maximum cars pulled

Voyage
	-(primary key) voyage ID
	-start date and time
	-(foreign key) train route

Train Station
	-(primary key) name
	-(primary key) station ID
	-latitude (optional)
	-longitude (optional)

Track Section (we assume double tracks everywhere)
	-(primary key) section ID
	-(foreign key) station of origin
	-(foreign key) terminal station
	-in service state

Section/Route (use this with the route's start/endpoint stations to piece together the train's path)
	-(foreign key) Track Section
	-(foreign key) Train Route
	
Train Route
	-(primary key) route ID
	-(foreign key) start point
	-(foreign key) endpoint
	-distance
	-base cost
	-travel time (functionally dependant on distance?)
	
Passenger
	-(primary key) passport number (optional)
	-(primary key) passenger ID
	-name
	-nationality (optional)
	-address (optional)
	-phone (optional)
	-payment info (optional)
	
Employee
	-(primary key) employee ID
	-name
	-title (eg, Assistant Engineer in Training)
	-years of experience
	
Engineer 
	-qualified engine models
	
Train Schedule will be in our view, not a relation.